{"ast":null,"code":"import _slicedToArray from \"/Users/ben/Desktop/framer-motion copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ben/Desktop/framer-motion copy/src/portfolio.js\",\n    _s = $RefreshSig$(),\n    _this2 = this;\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./PFolio.css\";\nimport images from \"./data\";\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar options = {// settings: {\n  // \toverlayColor: 'rgb(25, 136, 124)',\n  // \tautoplaySpeed: 1500,\n  // \ttransitionSpeed: 900\n  // },\n  // buttons: {\n  // \tbackgroundColor: 'red',\n  // \ticonColor: 'rgba(126, 172, 139, 0.8)'\n  // },\n  // caption: {\n  // \tcaptionColor: '#a6cfa5',\n  // \tcaptionFontFamily: 'Raleway, sans-serif',\n  // \tcaptionFontWeight: '300',\n  // \tcaptionTextTransform: 'uppercase'\n  // },\n  // progressBar: {\n  // \theight: '20px',\n  // \tfillColor: 'blue',\n  // \tbackgroundColor: 'white'\n  // }\n};\n\nfunction PFolio() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"all\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      tag = _useState2[0],\n      setTag = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredImages = _useState4[0],\n      setFilteredImages = _useState4[1];\n\n  useEffect(function () {\n    tag === \"all\" ? setFilteredImages(images) : setFilteredImages(images.filter(function (image) {\n      return image.tag === tag;\n    }));\n  }, [tag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tags\",\n      children: [/*#__PURE__*/_jsxDEV(TagButton, {\n        name: \"React\",\n        tagActive: tag === \"all\" ? true : false,\n        handleSetTag: setTag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TagButton, {\n        name: \"React-Native\",\n        tagActive: tag === \"new\" ? true : false,\n        handleSetTag: setTag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TagButton, {\n        name: \"Firebas\",\n        tagActive: tag === \"free\" ? true : false,\n        handleSetTag: setTag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TagButton, {\n        name: \"pro\",\n        tagActive: tag === \"pro\" ? true : false,\n        handleSetTag: setTag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SRLWrapper, {\n      options: options,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PFcontainer\",\n        children: filteredImages.map(function (image) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imageCard\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/images/\".concat(image.imageName),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: \"/images/\".concat(image.imageName),\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, _this)\n          }, image.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PFolio, \"yrsQlwFFDGRVkdfcYSx2XtQRvOg=\");\n\n_c = PFolio;\n\nvar TagButton = function TagButton(_ref) {\n  var name = _ref.name,\n      handleSetTag = _ref.handleSetTag,\n      tagActive = _ref.tagActive;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"tag \".concat(tagActive ? \"active\" : null),\n    onClick: function onClick() {\n      return handleSetTag(name);\n    },\n    children: name.toUpperCase()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, _this2);\n};\n\n_c2 = TagButton;\nexport default PFolio;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PFolio\");\n$RefreshReg$(_c2, \"TagButton\");","map":{"version":3,"sources":["/Users/ben/Desktop/framer-motion copy/src/portfolio.js"],"names":["React","useEffect","useState","images","SRLWrapper","options","PFolio","tag","setTag","filteredImages","setFilteredImages","filter","image","map","imageName","id","TagButton","name","handleSetTag","tagActive","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./PFolio.css\";\nimport images from \"./data\";\nimport { SRLWrapper } from \"simple-react-lightbox\";\n\nconst options = {\n  // settings: {\n  // \toverlayColor: 'rgb(25, 136, 124)',\n  // \tautoplaySpeed: 1500,\n  // \ttransitionSpeed: 900\n  // },\n  // buttons: {\n  // \tbackgroundColor: 'red',\n  // \ticonColor: 'rgba(126, 172, 139, 0.8)'\n  // },\n  // caption: {\n  // \tcaptionColor: '#a6cfa5',\n  // \tcaptionFontFamily: 'Raleway, sans-serif',\n  // \tcaptionFontWeight: '300',\n  // \tcaptionTextTransform: 'uppercase'\n  // },\n  // progressBar: {\n  // \theight: '20px',\n  // \tfillColor: 'blue',\n  // \tbackgroundColor: 'white'\n  // }\n};\n\nfunction PFolio() {\n  const [tag, setTag] = useState(\"all\");\n  const [filteredImages, setFilteredImages] = useState([]);\n\n  useEffect(() => {\n    tag === \"all\"\n      ? setFilteredImages(images)\n      : setFilteredImages(images.filter(image => image.tag === tag));\n  }, [tag]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"tags\">\n        <TagButton\n          name=\"React\"\n          tagActive={tag === \"all\" ? true : false}\n          handleSetTag={setTag}\n        />\n        <TagButton\n          name=\"React-Native\"\n          tagActive={tag === \"new\" ? true : false}\n          handleSetTag={setTag}\n        />\n        <TagButton\n          name=\"Firebas\"\n          tagActive={tag === \"free\" ? true : false}\n          handleSetTag={setTag}\n        />\n        <TagButton\n          name=\"pro\"\n          tagActive={tag === \"pro\" ? true : false}\n          handleSetTag={setTag}\n        />\n      </div>\n      <SRLWrapper options={options}>\n        <div className=\"PFcontainer\">\n          {filteredImages.map(image => (\n            <div key={image.id} className=\"imageCard\">\n              <a href={`/images/${image.imageName}`}>\n                <img\n                  className=\"image\"\n                  src={`/images/${image.imageName}`}\n                  alt=\"\"\n                />\n              </a>\n            </div>\n          ))}\n        </div>\n      </SRLWrapper>\n    </div>\n  );\n}\n\nconst TagButton = ({ name, handleSetTag, tagActive }) => {\n  return (\n    <button\n      className={`tag ${tagActive ? \"active\" : null}`}\n      onClick={() => handleSetTag(name)}\n    >\n      {name.toUpperCase()}\n    </button>\n  );\n};\n\nexport default PFolio;\n"]},"metadata":{},"sourceType":"module"}