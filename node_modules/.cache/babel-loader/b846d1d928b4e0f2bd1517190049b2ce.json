{"ast":null,"code":"import _slicedToArray from \"/Users/ben/Desktop/framer-motion copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/ben/Desktop/framer-motion copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/ben/Desktop/framer-motion copy/src/portfolio.js\",\n    _templateObject,\n    _s = $RefreshSig$(),\n    _this2 = this;\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./PFolio.css\";\nimport images from \"./data\";\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ImageCard = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  z-index: 100;\\n  &:hover {\\n    border: red 5px solid;\\n  }\\n\"])));\n_c = ImageCard;\nvar options = {// settings: {\n  // \toverlayColor: 'rgb(25, 136, 124)',\n  // \tautoplaySpeed: 1500,\n  // \ttransitionSpeed: 900\n  // },\n  // buttons: {\n  // \tbackgroundColor: 'red',\n  // \ticonColor: 'rgba(126, 172, 139, 0.8)'\n  // },\n  // caption: {\n  // \tcaptionColor: '#a6cfa5',\n  // \tcaptionFontFamily: 'Raleway, sans-serif',\n  // \tcaptionFontWeight: '300',\n  // \tcaptionTextTransform: 'uppercase'\n  // },\n  // progressBar: {\n  // \theight: '20px',\n  // \tfillColor: 'blue',\n  // \tbackgroundColor: 'white'\n  // }\n};\n\nfunction PFolio() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"GIT\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      tag = _useState2[0],\n      setTag = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredImages = _useState4[0],\n      setFilteredImages = _useState4[1];\n\n  useEffect(function () {\n    tag === \"GIT\" ? setFilteredImages(images) : setFilteredImages(images.filter(function (image) {\n      return image.tag.includes(tag);\n    }));\n  }, [tag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tags\",\n      children: [/*#__PURE__*/_jsxDEV(TagButton, {\n        name: \"React\",\n        tagActive: tag === \"React\" ? true : false,\n        handleSetTag: setTag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TagButton, {\n        name: \"React-Native\",\n        tagActive: tag === \"React-Native\" ? true : false,\n        handleSetTag: setTag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(TagButton, {\n        name: \"GIT\",\n        tagActive: tag === \"GIT\" ? true : false,\n        handleSetTag: setTag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TagButton, {\n        name: \"FireBase\",\n        tagActive: tag === \"FireBase\" ? true : false,\n        handleSetTag: setTag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TagButton, {\n        name: \"Latest Job\",\n        tagActive: tag === \"Latest Job\" ? true : false,\n        handleSetTag: setTag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SRLWrapper, {\n      options: options,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PFcontainer\",\n        children: [\" \", filteredImages.map(function (image) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ImageCard, {\n              className: \"imageCard\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"imageatag\",\n                href: \"/images/\".concat(image.imageName),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"image\",\n                  src: \"/images/\".concat(image.imageName),\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, _this)\n            }, image.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, _this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"overlay\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                class: \"icon\",\n                title: \"User Profile\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-user\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PFolio, \"Bx/yTG94T3RpEmD0OzaEaHC/NkE=\");\n\n_c2 = PFolio;\n\nvar TagButton = function TagButton(_ref) {\n  var name = _ref.name,\n      handleSetTag = _ref.handleSetTag,\n      tagActive = _ref.tagActive;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"tag \".concat(tagActive ? \"active\" : null),\n    onClick: function onClick() {\n      return handleSetTag(name);\n    },\n    children: name.toUpperCase()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, _this2);\n};\n\n_c3 = TagButton;\nexport default PFolio;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ImageCard\");\n$RefreshReg$(_c2, \"PFolio\");\n$RefreshReg$(_c3, \"TagButton\");","map":{"version":3,"sources":["/Users/ben/Desktop/framer-motion copy/src/portfolio.js"],"names":["React","useEffect","useState","images","SRLWrapper","styled","ImageCard","div","options","PFolio","tag","setTag","filteredImages","setFilteredImages","filter","image","includes","map","imageName","id","TagButton","name","handleSetTag","tagActive","toUpperCase"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AACA,IAAMC,SAAS,GAAGD,MAAM,CAACE,GAAV,sIAAf;KAAMD,S;AAMN,IAAME,OAAO,GAAG,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBc,CAAhB;;AAuBA,SAASC,MAAT,GAAkB;AAAA;;AAAA;;AAChB,kBAAsBP,QAAQ,CAAC,KAAD,CAA9B;AAAA;AAAA,MAAOQ,GAAP;AAAA,MAAYC,MAAZ;;AACA,mBAA4CT,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAOU,cAAP;AAAA,MAAuBC,iBAAvB;;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,GAAG,KAAK,KAAR,GACIG,iBAAiB,CAACV,MAAD,CADrB,GAEIU,iBAAiB,CAACV,MAAM,CAACW,MAAP,CAAc,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACL,GAAN,CAAUM,QAAV,CAAmBN,GAAnB,CAAJ;AAAA,KAAnB,CAAD,CAFrB;AAGD,GAJQ,EAIN,CAACA,GAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,SAAS,EAAEA,GAAG,KAAK,OAAR,GAAkB,IAAlB,GAAyB,KAFtC;AAGE,QAAA,YAAY,EAAEC;AAHhB;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,cADP;AAEE,QAAA,SAAS,EAAED,GAAG,KAAK,cAAR,GAAyB,IAAzB,GAAgC,KAF7C;AAGE,QAAA,YAAY,EAAEC;AAHhB;AAAA;AAAA;AAAA;AAAA,cANF,EAUK,GAVL,eAWE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,KADP;AAEE,QAAA,SAAS,EAAED,GAAG,KAAK,KAAR,GAAgB,IAAhB,GAAuB,KAFpC;AAGE,QAAA,YAAY,EAAEC;AAHhB;AAAA;AAAA;AAAA;AAAA,cAXF,eAgBE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAED,GAAG,KAAK,UAAR,GAAqB,IAArB,GAA4B,KAFzC;AAGE,QAAA,YAAY,EAAEC;AAHhB;AAAA;AAAA;AAAA;AAAA,cAhBF,eAqBE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,SAAS,EAAED,GAAG,KAAK,YAAR,GAAuB,IAAvB,GAA8B,KAF3C;AAGE,QAAA,YAAY,EAAEC;AAHhB;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA4BE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEH,OAArB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,mBACG,GADH,EAEGI,cAAc,CAACK,GAAf,CAAmB,UAAAF,KAAK;AAAA,8BACvB;AAAA,oCACE,QAAC,SAAD;AAA0B,cAAA,SAAS,EAAC,WAApC;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC,WAAb;AAAyB,gBAAA,IAAI,oBAAaA,KAAK,CAACG,SAAnB,CAA7B;AAAA,uCACE;AACE,kBAAA,SAAS,EAAC,OADZ;AAEE,kBAAA,GAAG,oBAAaH,KAAK,CAACG,SAAnB,CAFL;AAGE,kBAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,eAAgBH,KAAK,CAACI,EAAtB;AAAA;AAAA;AAAA;AAAA,qBADF,EASe,GATf,eAUE;AAAK,cAAA,KAAK,EAAC,SAAX;AAAA,qCACE;AAAG,gBAAA,IAAI,EAAC,GAAR;AAAY,gBAAA,KAAK,EAAC,MAAlB;AAAyB,gBAAA,KAAK,EAAC,cAA/B;AAAA,uCACE;AAAG,kBAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAVF;AAAA,0BADuB;AAAA,SAAxB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD;;GAhEQV,M;;MAAAA,M;;AAkET,IAAMW,SAAS,GAAG,SAAZA,SAAY,OAAuC;AAAA,MAApCC,IAAoC,QAApCA,IAAoC;AAAA,MAA9BC,YAA8B,QAA9BA,YAA8B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACvD,sBACE;AACE,IAAA,SAAS,gBAASA,SAAS,GAAG,QAAH,GAAc,IAAhC,CADX;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMD,YAAY,CAACD,IAAD,CAAlB;AAAA,KAFX;AAAA,cAIGA,IAAI,CAACG,WAAL;AAJH;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,CATD;;MAAMJ,S;AAWN,eAAeX,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./PFolio.css\";\nimport images from \"./data\";\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport styled from \"styled-components\";\nconst ImageCard = styled.div`\n  z-index: 100;\n  &:hover {\n    border: red 5px solid;\n  }\n`;\nconst options = {\n  // settings: {\n  // \toverlayColor: 'rgb(25, 136, 124)',\n  // \tautoplaySpeed: 1500,\n  // \ttransitionSpeed: 900\n  // },\n  // buttons: {\n  // \tbackgroundColor: 'red',\n  // \ticonColor: 'rgba(126, 172, 139, 0.8)'\n  // },\n  // caption: {\n  // \tcaptionColor: '#a6cfa5',\n  // \tcaptionFontFamily: 'Raleway, sans-serif',\n  // \tcaptionFontWeight: '300',\n  // \tcaptionTextTransform: 'uppercase'\n  // },\n  // progressBar: {\n  // \theight: '20px',\n  // \tfillColor: 'blue',\n  // \tbackgroundColor: 'white'\n  // }\n};\n\nfunction PFolio() {\n  const [tag, setTag] = useState(\"GIT\");\n  const [filteredImages, setFilteredImages] = useState([]);\n\n  useEffect(() => {\n    tag === \"GIT\"\n      ? setFilteredImages(images)\n      : setFilteredImages(images.filter(image => image.tag.includes(tag)));\n  }, [tag]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"tags\">\n        <TagButton\n          name=\"React\"\n          tagActive={tag === \"React\" ? true : false}\n          handleSetTag={setTag}\n        />\n        <TagButton\n          name=\"React-Native\"\n          tagActive={tag === \"React-Native\" ? true : false}\n          handleSetTag={setTag}\n        />{\" \"}\n        <TagButton\n          name=\"GIT\"\n          tagActive={tag === \"GIT\" ? true : false}\n          handleSetTag={setTag}\n        />\n        <TagButton\n          name=\"FireBase\"\n          tagActive={tag === \"FireBase\" ? true : false}\n          handleSetTag={setTag}\n        />\n        <TagButton\n          name=\"Latest Job\"\n          tagActive={tag === \"Latest Job\" ? true : false}\n          handleSetTag={setTag}\n        />\n      </div>\n      <SRLWrapper options={options}>\n        <div className=\"PFcontainer\">\n          {\" \"}\n          {filteredImages.map(image => (\n            <>\n              <ImageCard key={image.id} className=\"imageCard\">\n                <a className=\"imageatag\" href={`/images/${image.imageName}`}>\n                  <img\n                    className=\"image\"\n                    src={`/images/${image.imageName}`}\n                    alt=\"\"\n                  />\n                </a>\n              </ImageCard>{\" \"}\n              <div class=\"overlay\">\n                <a href=\"#\" class=\"icon\" title=\"User Profile\">\n                  <i class=\"fa fa-user\"></i>\n                </a>\n              </div>\n            </>\n          ))}\n        </div>\n      </SRLWrapper>\n    </div>\n  );\n}\n\nconst TagButton = ({ name, handleSetTag, tagActive }) => {\n  return (\n    <button\n      className={`tag ${tagActive ? \"active\" : null}`}\n      onClick={() => handleSetTag(name)}\n    >\n      {name.toUpperCase()}\n    </button>\n  );\n};\n\nexport default PFolio;\n"]},"metadata":{},"sourceType":"module"}